{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","src","alt","DialogItem","path","id","dialog","name","to","activeClassName","active","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messegesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","Component","RedirectComponent","this","React"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,iBAAmB,kCAAkC,iBAAmB,oC,qFCa9UC,EAXC,SAACC,GACb,OACI,qBAAIC,UAAWC,IAAEC,QAAjB,UACI,qBACIC,IAAI,wFACJC,IAAI,KACR,4BAAIL,EAAMG,c,QCQPG,EAbI,SAACN,GAClB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACE,qBAAIP,UAAWC,IAAEO,OAAjB,UACE,qBACEL,IAAI,wFACJC,IAAKL,EAAMU,OACb,cAAC,IAAD,CAASC,GAAIJ,EAAMK,gBAAiBV,IAAEW,OAAtC,SAA+Cb,EAAMU,W,yCCPrDI,EAAcC,YAAiB,IAatBC,cAAU,CAAEC,KAAM,2BAAlBD,EAXQ,SAAChB,GACtB,OACE,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAChBC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBAAqBf,KAAK,mBACxC,uDCiBSgB,EAvBC,SAAC1B,GAEf,IAAI2B,EAAkB3B,EAAM4B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBF,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OACtFwB,EAAmBhC,EAAM4B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS/B,QAAS+B,EAAE/B,SAAc+B,EAAE1B,OAM/F,OAAKR,EAAMmC,OAET,sBAAKlC,UAAWC,IAAE2B,QAAlB,UACE,oBAAI5B,UAAWC,IAAEkC,aAAjB,SACGT,IAEH,qBAAI1B,UAAWC,IAAE+B,SAAjB,UACGD,EACD,cAAC,EAAD,CAAgBd,SAZF,SAACmB,GACnBrC,EAAMsC,YAAYD,EAAOE,yBAGD,cAAC,IAAD,CAAU5B,GAAI,Y,wDCZtC6B,EAA6B,SAACC,GAAD,MAAY,CAC3CN,OAAQM,EAAMC,KAAKP,S,QCuBNQ,sBACbC,aAnBoB,SAACH,GACrB,MAAO,CACLb,YAAaa,EAAMb,gBAIE,SAACiB,GACxB,MAAO,CACLP,YAAa,SAACC,GACZM,EAASP,YAAYC,UDVK,SAACO,GAAe,IAExCC,EAFuC,4JAG3C,WACE,OAAKC,KAAKhD,MAAMmC,OAET,cAACW,EAAD,eAAeE,KAAKhD,QAFI,cAAC,IAAD,CAAUW,GAAI,eAJJ,GAEbsC,IAAMH,WAUtC,OAHqCF,YAAQJ,EAARI,CAAoCG,KCU5DJ,CAGbjB","file":"static/js/4.aa0bec08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2QICa\",\"dialogsItems\":\"Dialogs_dialogsItems__1-g1T\",\"dialog\":\"Dialogs_dialog__3u2C-\",\"active\":\"Dialogs_active__1ep-X\",\"messages\":\"Dialogs_messages__2dIN0\",\"message\":\"Dialogs_message__AV9Ys\",\"buttonBlue\":\"Dialogs_buttonBlue__Zytfd\",\"buttonBlueEffect\":\"Dialogs_buttonBlueEffect__3MT8n\",\"buttonBlueRotate\":\"Dialogs_buttonBlueRotate__IoFXA\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <li className={s.message}>\r\n            <img\r\n                src=\"http://www.petplan.com.au/blog/wp-content/uploads/2016/12/pet-insurance-dog-cat-8.jpg\"\r\n                alt=\"\"></img>\r\n            <p>{props.message}</p>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <li className={s.dialog}>\r\n      <img\r\n        src=\"http://www.petplan.com.au/blog/wp-content/uploads/2016/12/pet-insurance-dog-cat-8.jpg\"\r\n        alt={props.name}></img>\r\n      <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea}\r\n        validate={[required, maxLength50]}\r\n        placeholder=\"Enter your message\" name='newMessageBody' />\r\n      <button>add message</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMessageForm);\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n  let messegesElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />)\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <ul className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </ul>\r\n      <ul className={s.messages}>\r\n        {messegesElements}\r\n        <AddMessageForm onSubmit={addNewMessage} />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} /> // деструктуризацией перекидываем в другую компоненту всё, что пришло в меня\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  let ConnectedAuthREdirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent) //получаем стейт, что бы не дублировать эту строчку\r\n\r\n\r\n  return ConnectedAuthREdirectComponent\r\n}","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { sendMessage } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from './../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\n// функ коннект из реакт редах вызываем конект она вернула нам другую функцию и потом выз функ которую вернул нам новый вызов\r\n// первым вызовом настраиваем контейнерную компоненту\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage // пришла новая ссылка на обьект и поэтому перерисовывается\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessage(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\n// func compose даёт редакс\r\n// выз функция потом выз функ которую вернул нам compose compose(2)(1) выз диалог и закинет в вызов в withAuthRedirect потом возьмет результат и закинет в коннект\r\n// отрисовывается диалогс и в неё засовывается в props обьект со state другой с диспатч\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}