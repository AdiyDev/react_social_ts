{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Navbar/Friends/Friends.module.css","components/Navbar/Friends/Friend/Friend.module.css","api/profile-api.ts","redux/profile-reducer.ts","api/api.ts","redux/dialogs-reducer.ts","api/chat-api.ts","redux/chat-reducer.ts","components/Users/Users.module.css","components/Header/Header.module.css","components/News/News.tsx","components/Music/Music.tsx","components/common/Paginator/Paginator.tsx","assets/images/user.png","components/Users/User.tsx","redux/users-selectors.ts","components/Users/UsersSearchForm.tsx","utils/object-helper.ts","api/users-api.ts","redux/users-reducer.ts","components/Users/Users.tsx","components/Users/UsersPage.tsx","components/Settings/Settings.tsx","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","components/Login/Login.tsx","components/Navbar/Friends/Friend/Friend.tsx","components/Navbar/Friends/Friends.tsx","components/Navbar/Friends/FriendsContainer.tsx","components/Header/Header.tsx","redux/app-reducer.ts","redux/navbar-reducer.ts","redux/redux-store.ts","App.tsx","index.tsx","components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.ts","assets/images/preloader.svg","components/common/Preloader/Preloader.tsx"],"names":["module","exports","profileAPI","userId","instance","get","then","res","data","status","put","photoFile","formData","FormData","append","headers","profile","initialState","posts","id","message","likesCount","newPostText","actions","addPostActionCreator","type","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","photos","getUserProfile","dispatch","a","getStatus","updateStatus","resultCode","ResultCodesEnum","Success","savePhoto","file","saveProfile","getState","auth","Error","stopSubmit","_error","messages","Promise","reject","profileReducer","state","action","newPost","filter","p","ResultCodesForCaptchaEnum","axios","create","baseURL","withCredentials","dialogs","name","sendMessage","newMessageBody","payload","dialogsReducer","subscribers","ws","closeHandler","notifiSubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","console","error","cleanUp","removeEventListener","addEventListener","close","WebSocket","chatAPI","eventName","callback","push","send","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","startMessagesListening","stopMessagesListening","sendMessagesListening","chatReducer","map","m","v1","index","array","length","News","props","Music","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","cn","styles","paginator","onClick","selectedPage","pageNumber","User","user","followingInProgress","unfollow","follow","to","src","small","userPhoto","alt","usersPhoto","followed","disabled","some","location","country","city","getUsers","createSelector","usersPage","users","u","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getUsersFilter","usersSearchFormValidate","values","UsersSearchForm","React","memo","useSelector","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","as","value","updateObjectInArray","items","itemId","objPropName","newObjProps","usersAPI","post","delete","count","requestUsers","page","totalCount","_followUnfollowFlow","apiMethod","actionCreator","usersReducer","Users","useDispatch","history","useHistory","useEffect","parsed","queryString","search","substr","actualPage","actualFilter","Number","query","pathname","followChanged","bind","unfollowChanged","UsersPage","pageTitle","Preloader","Settings","authAPI","email","password","rememberMe","captcha","securityAPI","login","isAuth","captchaUrl","getAuthUserData","meData","getCaptchaUrl","url","authReducer","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","createField","required","Input","undefined","style","formSummaryError","LoginPage","CaptchaIsRequired","Friend","path","item","activeClassName","active","Friends","friendsElements","navbar","f","sideBarFriends","ul","FriendsContainer","connect","friends","Header","Layout","span","width","height","loginBlock","backgroundColor","icon","UserOutlined","color","marginRight","marginLeft","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","dialogsPage","navbarReducer","formReducer","app","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","SubMenu","Menu","Content","Footer","Sider","DialogsContainer","lazy","ProfileContainer","ChatPage","default","App","catchAllUnhandledErrors","alert","this","initializeApp","padding","margin","Item","mode","title","LaptopOutlined","SettingOutlined","SmileOutlined","minHeight","fallback","exact","render","subTitle","extra","textAlign","Component","AppContainer","withRouter","promise","all","SocialWebApp","ReactDOM","document","getElementById","FormControl","meta","touched","children","hasError","formControl","Textarea","input","restProps","placeholder","validators","component","text","maxLength","preloader"],"mappings":"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","file":"static/js/main.f5dadf8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__20RmB\",\"pageNumber\":\"Paginator_pageNumber__1DiFf\",\"selectedPage\":\"Paginator_selectedPage__SN1li\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBarFriends\":\"Friends_sideBarFriends__Osq3s\",\"ul\":\"Friends_ul__2a7w1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend_item__23dRm\",\"active\":\"Friend_active__3E8y_\"};","import { ProfileType, PhotosType } from '../types/types'\nimport { instance, APIResponseType } from './api'\n\ntype SavePhotoResponseDataType = {\n  photos: PhotosType\n}\n\nexport const profileAPI = {\n  getProfile(userId: number) {\n    return instance\n      .get<ProfileType & PhotosType>(`profile/` + userId)\n      .then(res => res.data)\n  },\n  getStatus(userId: number) {\n    return instance\n      .get<string>('profile/status/' + userId)\n      .then(res => res.data)\n  },\n  updateStatus(status: string) {\n    return instance\n      .put<APIResponseType>('profile/status', { status: status })\n      .then(res => res.data)\n  },\n  savePhoto(photoFile: any) {\n    const formData = new FormData()\n    formData.append('image', photoFile)\n\n    return instance\n      .put<APIResponseType<SavePhotoResponseDataType>>(\n        `profile/photo`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      )\n      .then(res => res.data)\n  },\n  saveProfile(profile: ProfileType) {\n    return instance\n      .put<APIResponseType>(`profile`, profile)\n      .then(res => res.data)\n  }\n}\n","import { FormAction, stopSubmit } from 'redux-form'\nimport { ResultCodesEnum } from '../api/api'\nimport { PhotosType, PostType, ProfileType } from '../types/types'\nimport { profileAPI } from './../api/profile-api'\nimport { BaseThunkType, InferActionsTypes } from './redux-store'\n\nconst initialState = {\n  posts: [\n    { id: 1, message: 'test_message_profile ', likesCount: 15 },\n    { id: 2, message: 'test_message_profile ', likesCount: 10 },\n    { id: 3, message: 'test_message_profile ', likesCount: 7 },\n    { id: 4, message: 'test_message_profile ', likesCount: 1 }\n  ] as Array<PostType>,\n  profile: null as ProfileType | null,\n  status: '',\n  newPostText: ''\n}\n\nconst profileReducer = (\n  state = initialState,\n  action: ActionsType\n): InitialStateType => {\n  switch (action.type) {\n    case 'SN/PROFILE/ADD-POST': {\n      const newPost = {\n        id: 5,\n        message: action.newPostText,\n        likesCount: 0\n      }\n      return {\n        ...state,\n        posts: [...state.posts, newPost]\n      }\n    }\n    case 'SN/PROFILE/SET_STATUS': {\n      return {\n        ...state,\n        status: action.status\n      }\n    }\n    case 'SN/PROFILE/SET_USER_PROFILE': {\n      return { ...state, profile: action.profile }\n    }\n\n    case 'SN/PROFILE/DELETE_POST':\n      return {\n        ...state,\n        posts: state.posts.filter(p => p.id !== action.postId)\n      }\n\n    case 'SN/PROFILE/SAVE_PHOTO_SUCCESS':\n      return {\n        ...state,\n        profile: { ...state.profile, photos: action.photos } as ProfileType\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  addPostActionCreator: (newPostText: string) =>\n    ({ type: 'SN/PROFILE/ADD-POST', newPostText } as const),\n  setUserProfile: (profile: ProfileType) =>\n    ({ type: 'SN/PROFILE/SET_USER_PROFILE', profile } as const),\n  setStatus: (status: string) =>\n    ({ type: 'SN/PROFILE/SET_STATUS', status } as const),\n  deletePost: (postId: number) =>\n    ({ type: 'SN/PROFILE/DELETE_POST', postId } as const),\n  savePhotoSuccess: (photos: PhotosType) =>\n    ({ type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos } as const)\n}\n\nexport const getUserProfile =\n  (userId: number): ThunkType =>\n  async dispatch => {\n    const data = await profileAPI.getProfile(userId)\n    dispatch(actions.setUserProfile(data))\n  }\n\nexport const getStatus =\n  (userId: number): ThunkType =>\n  async dispatch => {\n    const data = await profileAPI.getStatus(userId)\n    dispatch(actions.setStatus(data))\n  }\n\nexport const updateStatus =\n  (status: string): ThunkType =>\n  async dispatch => {\n    try {\n      const data = await profileAPI.updateStatus(status)\n\n      if (data.resultCode === ResultCodesEnum.Success) {\n        dispatch(actions.setStatus(status))\n      }\n    } catch (error) {}\n  }\n\nexport const savePhoto =\n  (file: File): ThunkType =>\n  async dispatch => {\n    const data = await profileAPI.savePhoto(file)\n\n    if (data.resultCode === ResultCodesEnum.Success) {\n      dispatch(actions.savePhotoSuccess(data.data.photos))\n    }\n  }\n\nexport const saveProfile =\n  (profile: ProfileType): ThunkType =>\n  async (dispatch, getState) => {\n    const userId = getState().auth.userId\n    const data = await profileAPI.saveProfile(profile)\n\n    if (data.resultCode === ResultCodesEnum.Success) {\n      if (userId !== null) {\n        dispatch(getUserProfile(userId))\n      } else {\n        throw new Error(\"userId can't be null\")\n      }\n    } else {\n      dispatch(stopSubmit('edit-profile', { _error: data.messages[0] }))\n      return Promise.reject(data.messages[0])\n    }\n  }\n\nexport default profileReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\n","import axios from 'axios'\nimport { UsersType } from '../types/types'\nexport const instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': '2561349e-c031-4f3f-acb6-8feb671f338e'\n  }\n})\n\nexport enum ResultCodesEnum {\n  Success = 0,\n  Error = 1\n}\n\nexport enum ResultCodesForCaptchaEnum {\n  CaptchaIsRequired = 10\n}\n\nexport type GetItemsType = {\n  items: Array<UsersType>\n  totalCount: number\n  error: string | null\n}\n\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\n  data: D\n  resultCode: RC\n  messages: Array<string>\n}\n","import { InferActionsTypes } from './redux-store'\n\ntype DialogType = {\n  id: number\n  name: string\n}\ntype MessageType = {\n  id: number\n  message: string\n}\n\nconst initialState = {\n  dialogs: [\n    { id: 1, name: 'user1' },\n    { id: 2, name: 'user2' },\n    { id: 3, name: 'user3' },\n    { id: 4, name: 'user4' },\n    { id: 5, name: 'user5' },\n    { id: 6, name: 'user6' }\n  ] as Array<DialogType>,\n  messages: [\n    { id: 1, message: 'test_message_dialogs' },\n    { id: 2, message: 'test_message_dialogs' },\n    { id: 3, message: 'test_message_dialogs' },\n    { id: 4, message: 'test_message_dialogs' },\n    { id: 5, message: 'test_message_dialogs' },\n    { id: 6, message: 'test_message_dialogs' }\n  ] as Array<MessageType>\n}\n\nconst dialogsReducer = (\n  state = initialState,\n  action: ActionsTypes\n): initialStateType => {\n  switch (action.type) {\n    case 'SN/DIALOGS/SEND-MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, { id: 7, message: action?.payload }]\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  sendMessage: (newMessageBody: string) => ({\n    type: 'SN/DIALOGS/SEND-MESSAGE',\n    payload: newMessageBody\n  })\n}\n\nexport default dialogsReducer\n\nexport type initialStateType = typeof initialState\ntype ActionsTypes = InferActionsTypes<typeof actions>\n","const subscribers = {\n  'messages-received': [] as MessagesReceivedSubscribersType[],\n  'status-changed': [] as StatusChangedSubscribersType[]\n}\n\nlet ws: WebSocket | null = null\ntype EventsNamesType = 'messages-received' | 'status-changed'\n\nconst closeHandler = () => {\n  notifiSubscribersAboutStatus('pending')\n  setTimeout(createChannel, 3000)\n}\n\nconst messageHandler = (e: MessageEvent) => {\n  const newMessages = JSON.parse(e?.data)\n  subscribers['messages-received'].forEach(s => s(newMessages))\n}\nconst openHandler = () => {\n  notifiSubscribersAboutStatus('ready')\n}\nconst errorHandler = () => {\n  notifiSubscribersAboutStatus('error')\n  console.error('RESTART PAGE')\n}\n\nconst cleanUp = () => {\n  ws?.removeEventListener('close', closeHandler)\n  ws?.removeEventListener('message', messageHandler)\n  ws?.addEventListener('open', openHandler)\n  ws?.addEventListener('error', errorHandler)\n}\n\nconst notifiSubscribersAboutStatus = (status: StatusType) => {\n  subscribers['status-changed'].forEach(s => s(status))\n}\n\nfunction createChannel() {\n  cleanUp()\n  ws?.close()\n  ws = new WebSocket(\n    'wss://social-network.samuraijs.com/handlers/ChatHandler.ashx'\n  )\n  notifiSubscribersAboutStatus('pending')\n  ws.addEventListener('close', closeHandler)\n  ws.addEventListener('message', messageHandler)\n  ws.addEventListener('open', openHandler)\n  ws.addEventListener('error', errorHandler)\n}\n\nexport const chatAPI = {\n  start() {\n    createChannel()\n  },\n  stop() {\n    subscribers['messages-received'] = []\n    subscribers['status-changed'] = []\n    cleanUp()\n    ws?.close()\n  },\n  subscribe(\n    eventName: EventsNamesType,\n    callback: MessagesReceivedSubscribersType | StatusChangedSubscribersType\n  ) {\n    // @ts-ignore\n    subscribers[eventName].push(callback)\n    return () => {\n      // @ts-ignore\n      subscribers[eventName] = subscribers[eventName].filter(\n        // @ts-ignore\n        s => s !== callback\n      )\n    }\n  },\n  unsubscribe(\n    eventName: EventsNamesType,\n    callback: MessagesReceivedSubscribersType | StatusChangedSubscribersType\n  ) {\n    // @ts-ignore\n    subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\n  },\n  sendMessage(message: string) {\n    ws?.send(message)\n  }\n}\n\ntype MessagesReceivedSubscribersType = (messages: ChatMessageAPIType[]) => void\ntype StatusChangedSubscribersType = (status: StatusType) => void\n\nexport type StatusType = 'pending' | 'ready' | 'error'\nexport type ChatMessageAPIType = {\n  message: string\n  photo: string\n  userId: number\n  userName: string\n}\n","import { BaseThunkType, InferActionsTypes } from './redux-store'\nimport { chatAPI, ChatMessageAPIType, StatusType } from '../api/chat-api'\nimport { Dispatch } from 'redux'\nimport { v1 } from 'uuid'\n\ntype ChatMessageType = ChatMessageAPIType & { id: string }\n\nconst initialState = {\n  messages: [] as ChatMessageType[],\n  status: 'pending' as StatusType\n}\n\nconst chatReducer = (\n  state = initialState,\n  action: actionTypes\n): initialStateType => {\n  switch (action.type) {\n    case 'SN/CHAT/MESSAGES_RECEIVIED':\n      return {\n        ...state,\n        messages: [\n          ...state.messages,\n          ...action?.payload.messages.map(m => ({ ...m, id: v1() }))\n        ].filter((m, index, array) => array.length - 100)\n      }\n    case 'SN/CHAT/STATUS_CHANGED':\n      return {\n        ...state,\n        status: action?.payload?.status\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  messagesReceived: (messages: ChatMessageAPIType[]) =>\n    ({\n      type: 'SN/CHAT/MESSAGES_RECEIVIED',\n      payload: { messages }\n    } as const),\n  statusChanged: (status: StatusType) =>\n    ({\n      type: 'SN/CHAT/STATUS_CHANGED',\n      payload: { status }\n    } as const)\n}\n\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\n\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\n  if (_newMessageHandler === null) {\n    _newMessageHandler = messages => {\n      dispatch(actions.messagesReceived(messages))\n    }\n  }\n  return _newMessageHandler\n}\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\n\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\n  if (_statusChangedHandler === null) {\n    _statusChangedHandler = status => {\n      dispatch(actions.statusChanged(status))\n    }\n  }\n  return _statusChangedHandler\n}\n\nexport const startMessagesListening = (): ThunkType => async dispatch => {\n  chatAPI.start()\n  chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\n  chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\n}\n\nexport const stopMessagesListening = (): ThunkType => async dispatch => {\n  chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\n  chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\n  chatAPI.stop()\n}\n\nexport const sendMessagesListening =\n  (message: string): ThunkType =>\n  async dispatch => {\n    chatAPI.sendMessage(message)\n  }\n\nexport default chatReducer\n\nexport type initialStateType = typeof initialState\ntype actionTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<actionTypes>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__d8SKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Ikiw\",\"loginBlock\":\"Header_loginBlock__2nEis\"};","import React from 'react'\n\nconst News: React.FC = (props: any) => {\n  return <div>News</div>\n}\n\nexport default News\n","import React from 'react'\n\nconst Music: React.FC = (props: any) => {\n  return <div>Music</div>\n}\n\nexport default Music\n","import React, { useState } from 'react'\nimport styles from './Paginator.module.css'\nimport cn from 'classnames'\n\ntype PropsType = {\n  totalItemsCount: number\n  pageSize: number\n  currentPage: number\n  onPageChanged: (pageNumber: number) => void\n  portionSize?: number\n}\n\nconst Paginator: React.FC<PropsType> = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  const pagesCount = Math.ceil(totalItemsCount / pageSize)\n\n  let pages = []\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i)\n  }\n\n  const portionCount = Math.ceil(pagesCount / portionSize)\n  const [portionNumber, setPortionNumber] = useState(1)\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n  const rightPortionPageNumber = portionNumber * portionSize\n\n  return (\n    <div className={cn(styles.paginator)}>\n      {portionNumber > 1 && (\n        <button\n          onClick={() => {\n            setPortionNumber(portionNumber - 1)\n          }}\n        >\n          PREV\n        </button>\n      )}\n\n      {pages\n        .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n        .map(p => {\n          return (\n            <span\n              className={cn(\n                {\n                  [styles.selectedPage]: currentPage === p\n                },\n                styles.pageNumber\n              )}\n              key={p}\n              onClick={e => {\n                onPageChanged(p)\n              }}\n            >\n              {p}\n            </span>\n          )\n        })}\n      {portionCount > portionNumber && (\n        <button\n          onClick={() => {\n            setPortionNumber(portionNumber + 1)\n          }}\n        >\n          NEXT\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default Paginator\n","export default __webpack_public_path__ + \"static/media/user.94b78e6a.png\";","import React from 'react'\nimport styles from './Users.module.css'\nimport userPhoto from '../../assets/images/user.png'\nimport { NavLink } from 'react-router-dom'\nimport { UsersType } from '../../types/types'\n\ntype PropsType = {\n  user: UsersType\n  followingInProgress: Array<number>\n  unfollow: (userId: number) => void\n  follow: (userId: number) => void\n}\n\nconst User: React.FC<PropsType> = ({\n  user,\n  followingInProgress,\n  unfollow,\n  follow\n}) => {\n  return (\n    <div>\n      <span>\n        <div>\n          <NavLink to={'/profile/' + user.id}>\n            <img\n              src={user.photos.small !== null ? user.photos.small : userPhoto}\n              alt=\"\"\n              className={styles.usersPhoto}\n            />\n          </NavLink>\n        </div>\n        <div>\n          {user.followed ? (\n            <button\n              disabled={followingInProgress.some(id => id === user.id)}\n              onClick={() => {\n                follow(user.id)\n              }}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              disabled={followingInProgress.some(id => id === user.id)}\n              onClick={() => {\n                unfollow(user.id)\n              }}\n            >\n              Follow\n            </button>\n          )}\n        </div>\n      </span>\n      <span>\n        <span>\n          <div>{user.name}</div>\n          <div>{user.status}</div>\n        </span>\n        <span>\n          <div>{user?.location?.country ?? 'Страна не определена'}</div>\n          <div>{user?.location?.city ?? 'Город не определён'}</div>\n        </span>\n      </span>\n    </div>\n  )\n}\nexport default User\n","import { createSelector } from 'reselect'\nimport { AppStateType } from './redux-store'\n\nconst getUsersSelector = (state: AppStateType) => {\n  return state.usersPage.users\n}\n\nexport const getUsers = createSelector(getUsersSelector, users => {\n  return users.filter(u => true)\n})\n\nexport const getPageSize = (state: AppStateType) => {\n  return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state: AppStateType) => {\n  return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state: AppStateType) => {\n  return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state: AppStateType) => {\n  return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state: AppStateType) => {\n  return state.usersPage.followingInProgress\n}\nexport const getUsersFilter = (state: AppStateType) => {\n  return state.usersPage.filter\n}\n","import { Field, Form, Formik } from 'formik'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { FilterType } from '../../redux/users-reducer'\nimport { getUsersFilter } from '../../redux/users-selectors'\n\nconst usersSearchFormValidate = (values: any) => {\n  const errors = {}\n  return errors\n}\n\ntype FriendFormType = 'true' | 'false' | 'null'\n\ntype FormType = {\n  friend: 'true' | 'false' | 'null'\n  term: string\n}\n\ntype PropsType = {\n  onFilterChanged: (filter: FilterType) => void\n}\n\nexport const UsersSearchForm: React.FC<PropsType> = React.memo(props => {\n  const filter = useSelector(getUsersFilter)\n  const submit = (\n    values: FormType,\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\n  ) => {\n    const filter: FilterType = {\n      term: values.term,\n      friend:\n        values.friend === 'null'\n          ? null\n          : values.friend === 'true'\n          ? true\n          : false\n    }\n\n    props.onFilterChanged(filter)\n    setSubmitting(false)\n  }\n\n  return (\n    <div>\n      <Formik\n        enableReinitialize\n        initialValues={{\n          term: filter.term,\n          friend: String(filter.friend) as FriendFormType\n        }}\n        validate={usersSearchFormValidate}\n        onSubmit={submit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"term\" />\n\n            <Field name=\"friend\" as=\"select\">\n              <option value=\"null\">All</option>\n              <option value=\"true\">Only followed</option>\n              <option value=\"false\">Only unfollowed</option>\n            </Field>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Find\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n})\n","export const updateObjectInArray = (\n  items: any,\n  itemId: any,\n  objPropName: any,\n  newObjProps: any\n) => {\n  return items.map((u: any) => {\n    if (u[objPropName] === itemId) {\n      return { ...u, ...newObjProps }\n    }\n    return u\n  })\n}\n","import { GetItemsType, instance, APIResponseType } from './api'\n\nexport const usersAPI = {\n  getUsers(\n    currentPage = 1,\n    pageSize = 10,\n    term: string = '',\n    friend: null | boolean = null\n  ) {\n    return instance\n      .get<GetItemsType>(\n        `users?page=${currentPage}&count=${pageSize}&term=${term}` +\n          (friend === null ? '' : `&friend=${friend}`)\n      )\n      .then(res => res.data)\n  },\n  follow(userId: number) {\n    return instance\n      .post<APIResponseType>(`follow/${userId}`)\n      .then(res => res.data)\n  },\n  unfollow(userId: number) {\n    return instance.delete(`follow/${userId}`).then(res => res.data)\n  }\n}\n","import { updateObjectInArray } from '../utils/object-helper'\nimport { UsersType } from '../types/types'\nimport { BaseThunkType, InferActionsTypes } from './redux-store'\nimport { Dispatch } from 'redux'\nimport { usersAPI } from '../api/users-api'\nimport { APIResponseType, ResultCodesEnum } from '../api/api'\n\nconst initialState = {\n  users: [] as Array<UsersType>,\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [] as Array<number>,\n  filter: {\n    term: '',\n    friend: null as null | boolean\n  }\n}\n\nconst usersReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialState => {\n  switch (action.type) {\n    case 'SN/USERS/FOLLOW':\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {\n          followed: true\n        })\n      }\n    case 'SN/USERS/UNFOLLOW':\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {\n          followed: false\n        })\n      }\n    case 'SN/USERS/SET_USERS': {\n      return { ...state, users: action.users }\n    }\n    case 'SN/USERS/SET_CURRENT_PAGE': {\n      return { ...state, currentPage: action.currentPage }\n    }\n    case 'SN/USERS/SET_TOTAL_USERS_COUNT': {\n      return { ...state, totalUsersCount: action.count }\n    }\n    case 'SN/USERS/SET_FILTER': {\n      return { ...state, filter: action.payload }\n    }\n    case 'SN/USERS/TOGGLE_IS_FETCHING': {\n      return { ...state, isFetching: action.isFetching }\n    }\n    case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter(id => id !== action.userId)\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  followSuccess: (userId: number) =>\n    ({ type: 'SN/USERS/FOLLOW', userId } as const),\n  unfollowSuccess: (userId: number) =>\n    ({ type: 'SN/USERS/UNFOLLOW', userId } as const),\n  setUsers: (users: Array<UsersType>) =>\n    ({ type: 'SN/USERS/SET_USERS', users } as const),\n  setCurrentPage: (currentPage: number) =>\n    ({ type: 'SN/USERS/SET_CURRENT_PAGE', currentPage } as const),\n  setTotalUsersCount: (totalUsersCount: number) =>\n    ({\n      type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\n      count: totalUsersCount\n    } as const),\n  setFilter: (filter: FilterType) =>\n    ({ type: 'SN/USERS/SET_FILTER', payload: filter } as const),\n  toggleIsFetching: (isFetching: boolean) =>\n    ({\n      type: 'SN/USERS/TOGGLE_IS_FETCHING',\n      isFetching\n    } as const),\n  toggleFollowingProgress: (isFetching: boolean, userId: number) =>\n    ({\n      type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\n      isFetching,\n      userId\n    } as const)\n}\n\nexport const requestUsers = (\n  page: number,\n  pageSize: number,\n  filter: FilterType\n): ThunkType => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(actions.toggleIsFetching(true))\n      dispatch(actions.setCurrentPage(page))\n      dispatch(actions.setFilter(filter))\n\n      const data = await usersAPI.getUsers(\n        page,\n        pageSize,\n        filter.term,\n        filter.friend\n      )\n      dispatch(actions.setUsers(data?.items))\n      dispatch(actions.setTotalUsersCount(data?.totalCount))\n    } catch (e) {\n    } finally {\n      dispatch(actions.toggleIsFetching(false))\n    }\n  }\n}\n\nconst _followUnfollowFlow = async (\n  dispatch: Dispatch<ActionsTypes>,\n  userId: number,\n  apiMethod: (userId: number) => Promise<APIResponseType>,\n  actionCreator: (userId: number) => ActionsTypes\n) => {\n  dispatch(actions.toggleFollowingProgress(true, userId))\n  const data = await apiMethod(userId)\n\n  if (data.resultCode === ResultCodesEnum.Success) {\n    dispatch(actionCreator(userId))\n  }\n  dispatch(actions.toggleFollowingProgress(false, userId))\n}\n\nexport const follow = (userId: number): ThunkType => {\n  return async dispatch => {\n    await _followUnfollowFlow(\n      dispatch,\n      userId,\n      usersAPI.follow.bind(usersAPI),\n      actions.followSuccess\n    )\n  }\n}\n\nexport const unfollow = (userId: number): ThunkType => {\n  return async dispatch => {\n    await _followUnfollowFlow(\n      dispatch,\n      userId,\n      usersAPI.unfollow.bind(usersAPI),\n      actions.unfollowSuccess\n    )\n  }\n}\n\nexport default usersReducer\n\nexport type InitialState = typeof initialState\nexport type FilterType = typeof initialState.filter\ntype ActionsTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsTypes>\n","import React, { useEffect } from 'react'\nimport Paginator from '../common/Paginator/Paginator'\nimport User from './User'\nimport { UsersSearchForm } from './UsersSearchForm'\nimport {\n  FilterType,\n  requestUsers,\n  follow,\n  unfollow\n} from '../../redux/users-reducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getCurrentPage,\n  getFollowingInProgress,\n  getPageSize,\n  getTotalUsersCount,\n  getUsers,\n  getUsersFilter\n} from '../../redux/users-selectors'\nimport { useHistory } from 'react-router-dom'\nimport * as queryString from 'query-string'\n\ntype propsType = {}\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\n\nexport const Users: React.FC<propsType> = () => {\n  const users = useSelector(getUsers)\n  const totalUsersCount = useSelector(getTotalUsersCount)\n  const currentPage = useSelector(getCurrentPage)\n  const pageSize = useSelector(getPageSize)\n  const filter = useSelector(getUsersFilter)\n  const followingInProgress = useSelector(getFollowingInProgress)\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(() => {\n    const parsed = queryString.parse(\n      history.location.search.substr(1)\n    ) as QueryParamsType\n\n    let actualPage = currentPage\n    let actualFilter = filter\n\n    if (!!parsed.page) actualPage = Number(parsed.page)\n\n    if (!!parsed.term)\n      actualFilter = { ...actualFilter, term: parsed.term as string }\n\n    switch (parsed.friend) {\n      case 'null':\n        actualFilter = { ...actualFilter, friend: null }\n        break\n      case 'true':\n        actualFilter = { ...actualFilter, friend: true }\n        break\n      case 'false':\n        actualFilter = { ...actualFilter, friend: false }\n        break\n    }\n\n    dispatch(requestUsers(actualPage, pageSize, actualFilter))\n  }, []) // eslint-disable-line\n\n  useEffect(() => {\n    const query: QueryParamsType = {}\n\n    if (!!filter.term) query.term = filter.term\n    if (filter.friend !== null) query.friend = String(filter.friend)\n    if (currentPage !== 1) query.page = String(currentPage)\n\n    history.push({\n      pathname: '/users',\n      search: queryString.stringify(query)\n    })\n  }, [filter, currentPage, followingInProgress]) // eslint-disable-line\n\n  const onPageChanged = (pageNumber: number) => {\n    dispatch(requestUsers(pageNumber, pageSize, filter))\n  }\n  const onFilterChanged = (filter: FilterType) => {\n    dispatch(requestUsers(1, pageSize, filter))\n  }\n  const followChanged = (userId: number) => {\n    dispatch(follow(userId))\n  }\n  const unfollowChanged = (userId: number) => {\n    dispatch(unfollow(userId))\n  }\n\n  return (\n    <div>\n      <UsersSearchForm onFilterChanged={onFilterChanged} />\n      <Paginator\n        currentPage={currentPage}\n        onPageChanged={onPageChanged}\n        totalItemsCount={totalUsersCount}\n        pageSize={pageSize}\n      />\n\n      <div>\n        {users.map(u => (\n          <User\n            user={u}\n            followingInProgress={followingInProgress}\n            key={u.id}\n            unfollow={followChanged}\n            follow={unfollowChanged}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Users } from './Users'\nimport Preloader from '../common/Preloader/Preloader'\nimport { getIsFetching } from '../../redux/users-selectors'\nimport { useSelector } from 'react-redux'\n\ntype UsersPagePropsType = {\n  pageTitle: string\n}\n\nexport const UsersPage: React.FC<UsersPagePropsType> = props => {\n  const isFetching = useSelector(getIsFetching)\n  return (\n    <>\n      <h2>{props.pageTitle}</h2>\n      {isFetching ? <Preloader /> : null}\n      <Users />\n    </>\n  )\n}\n","import React from 'react'\n\nconst Settings: React.FC = (props: any) => {\n  return <div>Settings</div>\n}\n\nexport default Settings\n","import {\n  instance,\n  APIResponseType,\n  ResultCodesEnum,\n  ResultCodesForCaptchaEnum\n} from './api'\n\ntype MeResponseDataType = {\n  id: number\n  email: number\n  login: string\n}\n\ntype LoginResponseDataType = {\n  userId: number\n}\n\nexport const authAPI = {\n  me() {\n    return instance\n      .get<APIResponseType<MeResponseDataType>>(`auth/me`)\n      .then(res => res.data)\n  },\n  login(\n    email: string,\n    password: string,\n    rememberMe = false,\n    captcha: null | string = null\n  ) {\n    return instance\n      .post<\n        APIResponseType<\n          LoginResponseDataType,\n          ResultCodesEnum | ResultCodesForCaptchaEnum\n        >\n      >(`auth/login`, { email, password, rememberMe, captcha })\n      .then(res => res.data)\n  },\n  logout() {\n    return instance.delete(`auth/login`)\n  }\n}\n","import { instance } from './api'\n\ntype GetCaptchaUrlResponseType = {\n  url: string\n}\n\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instance\n      .get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\n      .then(res => res.data)\n  }\n}\n","import { FormAction, stopSubmit } from 'redux-form'\nimport { authAPI } from './../api/auth-api'\nimport { securityAPI } from './../api/security-api'\nimport { ResultCodesEnum, ResultCodesForCaptchaEnum } from '../api/api'\nimport { BaseThunkType, InferActionsTypes } from './redux-store'\n\nconst initialState = {\n  userId: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n  captchaUrl: null as string | null\n}\n\nconst authReducer = (\n  state = initialState,\n  action: actionTypes\n): initialStateType => {\n  switch (action.type) {\n    case 'SN/AUTH/SET_USER_DATA':\n    case 'SN/AUTH/GET_CAPTCHA_URL_SUCCESS':\n      return {\n        ...state,\n        ...action?.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  setAuthUserData: (\n    userId: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean\n  ) =>\n    ({\n      type: 'SN/AUTH/SET_USER_DATA',\n      payload: { userId, email, login, isAuth }\n    } as const),\n  getCaptchaUrlSuccess: (captchaUrl: string) =>\n    ({\n      type: 'SN/AUTH/GET_CAPTCHA_URL_SUCCESS',\n      payload: { captchaUrl }\n    } as const)\n}\n\nexport const getAuthUserData = (): ThunkType => async dispatch => {\n  const meData = await authAPI.me()\n  if (meData.resultCode === ResultCodesEnum.Success) {\n    const { id, email, login } = meData?.data as any\n    dispatch(actions.setAuthUserData(id, email, login, true))\n  }\n}\n\nexport const login =\n  (\n    email: string,\n    password: string,\n    rememberMe: boolean,\n    captcha: string\n  ): ThunkType =>\n  async dispatch => {\n    const data = await authAPI.login(email, password, rememberMe, captcha)\n    if (data.resultCode === ResultCodesEnum.Success) {\n      dispatch(getAuthUserData())\n    } else {\n      if (data.resultCode === ResultCodesForCaptchaEnum.CaptchaIsRequired) {\n        dispatch(getCaptchaUrl())\n      }\n\n      const message = data.messages.length > 0 ? data.messages[0] : 'Some error'\n      dispatch(stopSubmit('login', { _error: message }))\n    }\n  }\n\nexport const getCaptchaUrl = (): ThunkType => async dispatch => {\n  const data = await securityAPI.getCaptchaUrl()\n  const captchaUrl = data.url\n  dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\n}\n\nexport const logout = (): ThunkType => async dispatch => {\n  const response = await authAPI.logout()\n\n  if (response.data.resultCode === ResultCodesEnum.Success) {\n    dispatch(actions.setAuthUserData(null, null, null, false))\n  }\n}\n\nexport default authReducer\n\nexport type initialStateType = typeof initialState\ntype actionTypes = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<actionTypes | FormAction>\n","import React from 'react'\nimport { InjectedFormProps, reduxForm } from 'redux-form'\nimport {\n  createField,\n  GetStringKeys,\n  Input\n} from '../common/FormsControls/FormsControls'\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login } from '../../redux/auth-reducer'\nimport { Redirect } from 'react-router-dom'\nimport style from './../common/FormsControls/FormsControls.module.css'\nimport { AppStateType } from '../../redux/redux-store'\n\nconst maxLength30 = maxLengthCreator(30)\n\ntype LoginFormOwnProps = {\n  captchaUrl: string | null\n}\n\nconst LoginForm: React.FC<\n  InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps\n> = ({ handleSubmit, error, captchaUrl }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      {createField<LoginFormValuesTypeKeys>(\n        'Email',\n        'email',\n        [required, maxLength30],\n        Input\n      )}\n      {createField<LoginFormValuesTypeKeys>(\n        'Password',\n        'password',\n        [required, maxLength30],\n        Input,\n        { type: 'password' }\n      )}\n      {createField<LoginFormValuesTypeKeys>(\n        undefined,\n        'rememberMe',\n        [],\n        Input,\n        { type: 'checkbox' },\n        'remember me'\n      )}\n\n      {captchaUrl && <img src={captchaUrl} alt=\"\" />}\n      {captchaUrl &&\n        createField<LoginFormValuesTypeKeys>(\n          'Symbols from image',\n          'captcha',\n          [required],\n          Input,\n          {}\n        )}\n\n      {error && <div className={style.formSummaryError}>{error}</div>}\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({\n  form: 'login'\n})(LoginForm)\n\nexport type LoginFormValuesType = {\n  captcha: string\n  rememberMe: boolean\n  password: string\n  email: string\n}\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\n\nexport const LoginPage: React.FC = () => {\n  const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\n  const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\n  const dispatch = useDispatch()\n\n  const onSubmit = (formData: LoginFormValuesType) => {\n    dispatch(\n      login(\n        formData.email,\n        formData.password,\n        formData.rememberMe,\n        formData.captcha\n      )\n    )\n  }\n\n  if (isAuth) {\n    return <Redirect to={'/profile'} />\n  }\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\n    </div>\n  )\n}\n","import React from 'react'\nimport s from './Friend.module.css'\nimport { NavLink } from 'react-router-dom'\n\ntype PropsType = {\n  id: number\n  name: string\n}\n\nconst Friend: React.FC<PropsType> = props => {\n  const path = '/' + props.id\n\n  return (\n    <li className={s.item}>\n      <NavLink to={path} activeClassName={s.active}>\n        <img\n          src=\"http://www.petplan.com.au/blog/wp-content/uploads/2016/12/pet-insurance-dog-cat-8.jpg\"\n          alt={`${props.name} ${props.id}`}\n        ></img>\n        <p>{props.name}</p>\n      </NavLink>\n    </li>\n  )\n}\n\nexport default Friend\n","import React from 'react'\nimport s from './Friends.module.css'\nimport Friend from './Friend/Friend'\nimport { friendType } from '../../../redux/navbar-reducer'\n\ntype PropsType = {\n  navbar: Array<friendType>\n}\n\nconst Friends: React.FC<PropsType> = props => {\n  const friendsElements = props.navbar.map(f => (\n    <Friend id={f.id} key={f.id} name={f.name} />\n  ))\n\n  return (\n    <div className={s.sideBarFriends}>\n      <h3>Friends</h3>\n      <ul className={s.ul}>{friendsElements}</ul>\n    </div>\n  )\n}\n\nexport default Friends\n","import Friends from './Friends'\nimport { connect } from 'react-redux'\nimport { AppStateType } from '../../../redux/redux-store'\nimport { friendType } from '../../../redux/navbar-reducer'\n\ntype MapStatePropType = {\n  navbar: Array<friendType>\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropType => {\n  return {\n    navbar: state.navbar.friends\n  }\n}\n\nconst FriendsContainer = connect(mapStateToProps)(Friends)\n\nexport default FriendsContainer\n","import React from 'react'\nimport s from './Header.module.css'\nimport { Link } from 'react-router-dom'\nimport { Layout, Row, Col, Avatar, Button } from 'antd'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../redux/redux-store'\nimport { logout } from '../../redux/auth-reducer'\nimport { UserOutlined } from '@ant-design/icons'\n\ntype OwnProps = {}\n\nexport const Header: React.FC<OwnProps> = () => {\n  const { Header } = Layout\n  const { isAuth, login } = useSelector((state: AppStateType) => state.auth)\n  const dispatch = useDispatch()\n\n  const logoutCallback = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <Header className=\"header\">\n      <Row>\n        <Col span={20}>\n          <div className=\"logo\" />\n          <img\n            style={{ width: 80, height: 60 }}\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjPcCvhIcUpVMqNdX31gJU90TGEO2YZBxWPuvuiSMIwJaJ8LyHJqwL7wW32hX_2_H9kCU&usqp=CAU\"\n            alt=\"\"\n          ></img>\n        </Col>\n        <Col span={4}>\n          <div className={s.loginBlock}>\n            {isAuth ? (\n              <div>\n                <Avatar\n                  style={{ backgroundColor: '#87d068' }}\n                  icon={<UserOutlined />}\n                />\n                <span\n                  style={{ color: 'white', marginRight: 10, marginLeft: 10 }}\n                >\n                  {login}\n                </span>\n                <Button onClick={logoutCallback}>Log out</Button>\n              </div>\n            ) : (\n              <Link to={'/login'}>Login</Link>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Header>\n  )\n}\n","import { getAuthUserData } from './auth-reducer'\nimport { BaseThunkType, InferActionsTypes } from './redux-store'\n\nconst initialState = {\n  initialized: false\n}\nexport type initialStateType = typeof initialState\ntype ThunkType = BaseThunkType<ActionsTypes>\nconst appReducer = (\n  state = initialState,\n  action: ActionsTypes\n): initialStateType => {\n  switch (action.type) {\n    case 'SN/APP/INITIALIZED_SUCCESS':\n      return {\n        ...state,\n        initialized: true\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  initializedSuccess: () =>\n    ({\n      type: 'SN/APP/INITIALIZED_SUCCESS'\n    } as const)\n}\n\ntype ActionsTypes = InferActionsTypes<typeof actions>\n\nexport const initializeApp = (): ThunkType => async (dispatch: any) => {\n  const promise = await dispatch(getAuthUserData())\n\n  Promise.all([promise]).then(() => {\n    dispatch(actions.initializedSuccess())\n  })\n}\n\nexport default appReducer\n","export type friendType = {\n  id: number\n  name: string\n}\n\nconst initialState = {\n  friends: [\n    { id: 1, name: 'user1' },\n    { id: 2, name: 'user2' },\n    { id: 3, name: 'user3' }\n  ] as Array<friendType>\n}\n\nconst sidebarReducer = (state = initialState): initialStateType => {\n  return state\n}\n\nexport default sidebarReducer\n\nexport type initialStateType = typeof initialState\n","import {\n  combineReducers,\n  createStore,\n  compose,\n  applyMiddleware,\n  Action\n} from 'redux'\nimport profileReducer from './profile-reducer'\nimport dialogsReducer from './dialogs-reducer'\nimport navbarReducer from './navbar-reducer'\nimport usersReducer from './users-reducer'\nimport authReducer from './auth-reducer'\nimport appReducer from './app-reducer'\nimport chatReducer from './chat-reducer'\nimport { reducer as formReducer } from 'redux-form'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\n\nconst rootReducer = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  navbar: navbarReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer,\n  chat: chatReducer\n})\n\ntype rootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<rootReducerType>\n\nexport type InferActionsTypes<T> = T extends {\n  [keys: string]: (...args: any[]) => infer U\n}\n  ? U\n  : never\n\nexport type BaseThunkType<\n  A extends Action = Action,\n  R = Promise<void>\n> = ThunkAction<R, AppStateType, unknown, A>\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n)\n\nexport default store\n","import React, { Component, Suspense } from 'react'\n\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport News from './components/News/News'\nimport Music from './components/Music/Music'\nimport { UsersPage } from './components/Users/UsersPage'\nimport Settings from './components/Settings/Settings'\nimport { LoginPage } from './components/Login/Login'\nimport FriendsContainer from './components/Navbar/Friends/FriendsContainer'\nimport { Header } from './components/Header/Header'\nimport {\n  Route,\n  withRouter,\n  HashRouter,\n  Redirect,\n  Switch,\n  Link\n} from 'react-router-dom'\nimport { connect, Provider } from 'react-redux'\nimport { initializeApp } from './redux/app-reducer'\nimport { compose } from 'redux'\nimport Preloader from './components/common/Preloader/Preloader'\nimport store, { AppStateType } from './redux/redux-store'\nimport { Layout, Menu, Breadcrumb, Result, Button } from 'antd'\nimport {\n  UserOutlined,\n  LaptopOutlined,\n  SettingOutlined,\n  SmileOutlined\n} from '@ant-design/icons'\n\nconst { SubMenu } = Menu\nconst { Content, Footer, Sider } = Layout\n\nconst DialogsContainer = React.lazy(\n  () => import('./components/Dialogs/DialogsContainer')\n)\nconst ProfileContainer = React.lazy(\n  () => import('./components/Profile/ProfileContainer')\n)\n\nconst ChatPage = React.lazy(() =>\n  import('./pages/Chat/ChatPage').then(module => ({\n    default: module.ChatPage\n  }))\n)\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n  initializeApp: () => void\n}\n\nclass App extends Component<MapPropsType & DispatchPropsType> {\n  catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n    alert('Some error occured')\n  }\n  componentDidMount() {\n    this.props.initializeApp()\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\n      'unhandledrejection',\n      this.catchAllUnhandledErrors\n    )\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <Layout>\n        <Header />\n        <Content style={{ padding: '0 50px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n            <Breadcrumb.Item>List</Breadcrumb.Item>\n            <Breadcrumb.Item>App</Breadcrumb.Item>\n          </Breadcrumb>\n          <Layout\n            className=\"site-layout-background\"\n            style={{ padding: '24px 0' }}\n          >\n            <Sider className=\"site-layout-background\" width={200}>\n              <Menu\n                mode=\"inline\"\n                // defaultSelectedKeys={['2']}\n                // defaultOpenKeys={['sub1']}\n                style={{ height: '100%' }}\n              >\n                <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"My profile\">\n                  <Menu.Item key=\"1\">\n                    <Link to=\"/profile\">Profile</Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"2\">\n                    <Link to=\"/dialogs\">Dialogs</Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"3\">option3</Menu.Item>\n                  <Menu.Item key=\"4\">option4</Menu.Item>\n                </SubMenu>\n                <SubMenu\n                  key=\"sub2\"\n                  icon={<LaptopOutlined />}\n                  title=\"Developers\"\n                >\n                  <Menu.Item key=\"5\">\n                    <Link to=\"/users\">Users</Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"6\">option6</Menu.Item>\n                  <Menu.Item key=\"7\">option7</Menu.Item>\n                  <Menu.Item key=\"8\">option8</Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"sub3\" icon={<SettingOutlined />} title=\"subnav 3\">\n                  <Menu.Item key=\"9\">\n                    <Link to=\"/music\">Music</Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"10\">\n                    <Link to=\"/news\">News</Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"11\">\n                    <Link to=\"/settings\">Settings</Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"12\">\n                    <Link to=\"/chat\">Chat</Link>\n                  </Menu.Item>\n                </SubMenu>\n\n                <SubMenu\n                  key=\"sub4\"\n                  icon={<SmileOutlined />}\n                  title=\"Best Friend\"\n                >\n                  <FriendsContainer />\n                </SubMenu>\n              </Menu>\n            </Sider>\n            <Content style={{ padding: '0 24px', minHeight: 280 }}>\n              <Suspense\n                fallback={\n                  <div>\n                    <Preloader />\n                    Загружаюсь.......\n                  </div>\n                }\n              >\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/\"\n                    render={() => <Redirect to={'/profile'} />}\n                  />\n                  <Route\n                    path=\"/profile/:userId?\"\n                    render={() => <ProfileContainer />}\n                  />\n                  <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n                  <Route path=\"/news\" render={() => <News />} />\n                  <Route path=\"/music\" render={() => <Music />} />\n                  <Route\n                    path=\"/users\"\n                    render={() => (\n                      <UsersPage pageTitle={'Заголовок Страницы'} />\n                    )}\n                  />\n                  <Route path=\"/settings\" render={() => <Settings />} />\n                  <Route path=\"/login\" render={() => <LoginPage />} />\n                  <Route path=\"/chat\" render={() => <ChatPage />} />\n                  <Route\n                    path=\"*\"\n                    render={() => (\n                      <Result\n                        status=\"404\"\n                        title=\"404\"\n                        subTitle=\"Страницы не существует, возможно появится позже\"\n                        extra={\n                          <Link to=\"/\">\n                            <Button type=\"primary\">Back Home</Button>\n                          </Link>\n                        }\n                      />\n                    )}\n                  />\n                </Switch>\n              </Suspense>\n            </Content>\n          </Layout>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>See on top</Footer>\n      </Layout>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized\n})\n\nconst AppContainer = compose<React.ComponentType>(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App)\n\nconst SocialWebApp: React.FC = () => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  )\n}\n\nexport default SocialWebApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport SocialWebApp from './App'\n\nReactDOM.render(<SocialWebApp />, document.getElementById('root'))\n","import React from 'react'\nimport styles from './FormsControls.module.css'\nimport { Field, WrappedFieldProps } from 'redux-form'\nimport { WrappedFieldMetaProps } from 'redux-form/lib/Field'\nimport { fiealValidatorType } from '../../../utils/validators/validators'\n\ntype FormControlPropsType = {\n  meta: WrappedFieldMetaProps\n}\n\nconst FormControl: React.FC<FormControlPropsType> = ({\n  meta: { touched, error },\n  children\n}) => {\n  const hasError = touched && error\n  return (\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n      <div>{children}</div>\n      {hasError && <span>{error}</span>}\n    </div>\n  )\n}\n\nexport const Textarea: React.FC<WrappedFieldProps> = props => {\n  const { input, meta, ...restProps } = props\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FormControl>\n  )\n}\n\nexport const Input: React.FC<WrappedFieldProps> = props => {\n  const { input, meta, ...restProps } = props\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  )\n}\n\nexport function createField<FormKeysType extends string>(\n  placeholder: string | undefined,\n  name: FormKeysType,\n  validators: Array<fiealValidatorType>,\n  component: React.FC<WrappedFieldProps>,\n  props = {},\n  text = ''\n) {\n  return (\n    <div>\n      <Field\n        placeholder={placeholder}\n        name={name}\n        validate={validators}\n        component={component}\n        {...props}\n      />\n      {text}\n    </div>\n  )\n}\n\nexport type GetStringKeys<T> = Extract<keyof T, string>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__yIeuR\",\"error\":\"FormsControls_error__1Bg71\",\"formSummaryError\":\"FormsControls_formSummaryError__2A5-1\"};","export type fiealValidatorType = (value: string) => string | undefined\n\nexport const required: fiealValidatorType = value => {\n  if (value) return undefined\n\n  return 'Field required'\n}\n\nexport const maxLengthCreator =\n  (maxLength: number): fiealValidatorType =>\n  value => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n\n    return undefined\n  }\n","export default __webpack_public_path__ + \"static/media/preloader.6fa5554b.svg\";","import React from 'react'\nimport preloader from '../../../assets/images/preloader.svg'\n\nconst Preloader: React.FC = () => {\n  return <img src={preloader} alt=\"preloader\"></img>\n}\n\nexport default Preloader\n"],"sourceRoot":""}