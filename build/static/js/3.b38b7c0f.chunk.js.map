{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","assets/images/userPhotoEmpty.jpg","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","onChange","e","currentTarget","value","updateStatus","onFocus","target","select","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","profileInfoWrapper","imageBlock","src","alt","descriptionBlock","photos","large","userPhotoEmpty","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","profilePage","posts","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","dispatch","addPostActionCreator","Profile","profileWrapper","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b38b7c0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__1Pelv\",\"imageBlock\":\"ProfileInfo_imageBlock__3_wPo\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3jsoS\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3ov2R\",\"contact\":\"ProfileInfo_contact__3_Xqs\",\"minPhoto\":\"ProfileInfo_minPhoto__21zar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__laui4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__9ow1v\",\"postsBlock\":\"MyPosts_postsBlock__r7VTT\",\"myPostsBlock\":\"MyPosts_myPostsBlock__1LlWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Pzf7\"};","import React, { useState, useEffect } from 'react';\r\n// import s from \"./ProfileInfo.module.css\";\r\n\r\n// let arr = [0, () => {}]\r\n// let [a, setA] = arr\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  // let stateWithSetState = useState(true) //локальный стейт возвращает массив 2 элемента в нём сидят\r\n  // let editMode = stateWithSetState[0] //первым юзстейт хранится в стейте непосредственно \r\n  // let setEditMode = stateWithSetState[1] //вторым функция которая будет изменять первое это значение из стейт [0]\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n  //useEffect -сайд эффект тоже\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n  //пустой массив говорит, что как компонент дид маунт отрисуйся 1 раз (но так делать не правильно, прочитать статью дена абрамова)\r\n  //через пропс поставили поставили зависимость от стейта в пустой массив\r\n\r\n\r\n  const activeteEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactiveteEditMode = () => {\r\n    //берется из React.Componentт передаем обьект свойства который перезапишет свойства в нашем локальном стейте\r\n    setEditMode(false)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const handleFocus = (e) => {\r\n    e.target.select()\r\n  }\r\n\r\n\r\n  return (\r\n    <ul>\r\n      {!editMode &&\r\n        <li><span onDoubleClick={activeteEditMode}>{status || '------'}</span></li>\r\n      }\r\n      {editMode &&\r\n        <li><input\r\n          autoFocus={true}\r\n          onBlur={deactiveteEditMode}\r\n          onChange={onStatusChange}\r\n          onFocus={handleFocus}\r\n          value={status}\r\n\r\n        /></li>\r\n      }\r\n    </ul >\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","export default __webpack_public_path__ + \"static/media/userPhotoEmpty.b6e40cdf.jpg\";","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return <form onSubmit={handleSubmit}>\r\n    <div><button>save</button></div>\r\n    {error && <div className={style.formSummaryError}>\r\n      {error}\r\n    </div>\r\n    }\r\n    <div>\r\n      <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n    </div>\r\n\r\n    <div>\r\n      <b>My professional skills</b>:\r\n      {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <b>About me</b>:\r\n      {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={s.contact}>\r\n          <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n        </div>\r\n      })}\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport userPhotoEmpty from '../../../assets/images/userPhotoEmpty.jpg'\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ul className={s.profileInfoWrapper}>\r\n      <li className={s.imageBlock}>\r\n        <img\r\n          src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\"\r\n          alt=\"Шапка профиля\"></img>\r\n      </li>\r\n      <li className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhotoEmpty} alt=\"\" />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n          : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>\r\n      <b>Full name</b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n\r\n    <div>\r\n      <b>About me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <li className={s.item}>\r\n            <img\r\n                src=\"http://www.petplan.com.au/blog/wp-content/uploads/2016/12/pet-insurance-dog-cat-8.jpg\"\r\n                alt=\"\"></img>\r\n            {props.message}\r\n            <span>like </span>{props.likesCount}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator, } from '../../../utils/validators/validators';\r\nimport { Textarea } from './../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit} >\r\n    <h3>My posts</h3>\r\n    <Field name='newPostText' component={Textarea}\r\n      placeholder={'Post message'}\r\n      validate={[required, maxLength10]} />\r\n    <button>add post</button>\r\n  </form>\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.profilePage.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <ul className={s.posts}>\r\n        {postsElements}\r\n      </ul>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react'\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage //posts уже ссылается на другой пост, так как сделали его копию\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n} // возвращаем обьект с функциями\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.profileWrapper}>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile}\r\n        savePhoto={props.savePhoto}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from './../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile  {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}